import unittest, linalg


suite "initializaton of vectors":
  test "zero vectors":
    let v = zeros(5)
    check len(v) == 5
    check v[0] == 0.0
    check v[1] == 0.0
    check v[2] == 0.0
    check v[3] == 0.0
    check v[4] == 0.0 
  test "one vectors":
    let v = ones(3)
    check len(v) == 3
    check v[0] == 1.0
    check v[1] == 1.0
    check v[2] == 1.0
  test "constant vectors":
    let v = constantVector(4, 2.3)
    check len(v) == 4
    check v[0] == 2.3
    check v[1] == 2.3
    check v[2] == 2.3
    check v[3] == 2.3
  test "vectors generated by a proc":
    let v = makeVector(4, proc(i: int): float64 = (i * i).float64)
    check len(v) == 4
    check v[0] == 0.0
    check v[1] == 1.0
    check v[2] == 4.0
    check v[3] == 9.0
  test "vectors generated by an array":
    let
      a = [1.2, 3.2, 2.6, 2.8, -1.45]
      v = vector(a)
    check len(v) == len(a)
    for i in 0 .. high(a):
      check v[i] == a[i]
  test "vectors generated by a sequence":
    let
      a = @[1.2, 3.2, 2.6, 2.8, -1.45]
      v = dvector(5, a)
    check len(v) == len(a)
    for i in 0 .. high(a):
      check v[i] == a[i]
  test "vectors generated randomly":
    let v = randomVector(6)
    check len(v) == 6
    for i in 0 .. 5:
      check v[i] >= 0
      check v[i] <= 1

suite "initializaton of matrices":
  test "zero matrices":
    let m = zeros(3, 2)
    check dim(m) == (3, 2)
    check m[0, 0] == 0.0
    check m[1, 0] == 0.0
    check m[2, 0] == 0.0
    check m[0, 1] == 0.0
    check m[1, 1] == 0.0
    check m[2, 1] == 0.0
  test "one matrices":
    let m = ones(2, 2)
    check dim(m) == (2, 2)
    check m[0, 0] == 1.0
    check m[1, 0] == 1.0
    check m[0, 1] == 1.0
    check m[1, 1] == 1.0
  test "constant matrices":
    let m = constantMatrix(2, 3, 1.5)
    check dim(m) == (2, 3)
    check m[0, 0] == 1.5
    check m[1, 0] == 1.5
    check m[0, 1] == 1.5
    check m[1, 1] == 1.5
    check m[0, 2] == 1.5
    check m[1, 2] == 1.5